<div class="container-fluid">
  <div class="row">
    <div class="col-8">
      <div class="row">
        <%= render 'posts/navbar' %>
      </div>
      <div class="row my-2">
        <div class="col-3">
          <%= image_tag @user.get_profile_image(150,150), class: "mx-auto rounded-circle border border-light shadow-sm" %>
        </div>
        <div class="col-9">
          <div class="row">
            <div class="col-11">
              <% if @user.is_deleted == false %>
                <div class="d-flex align-items-center">
                  <h3 class="text-light"><%= @user.name %></h3>
                  <span class="ms-auto" id="follow_<%= @user.id %>">
                    <%= render 'relationships/follow', user: @user %>
                  </span>
                </div>
                <p class="text-light"><%= @user.introduction %></p>
                <div class="row">
                  <%= render 'relationships/relationship' %>
                </div>
              <% else %>
                <h4 class="text-center text-light">このユーザーは退会済みです。</h4>
              <% end %>
            </div>
            <div class="col-1">
              <span class="h3">
                <% if @user == current_user && current_user.name != "ゲストユーザー" %>
                  <%= link_to edit_user_path(@user), class: "text-decoration-none text-primary" do %>
                    <i class="fa-solid fa-user-gear"></i>
                  <% end %>
                <% end %>
              </span>
            </div>
          </div>
        </div>
      </div>

      <div class="row mt-2 justify-content-center">
        <div id="user_map"></div>
      </div>
    </div>

    <div class="col-4">
      <div class="row">
        <h4 class="text-center text-light">投稿一覧</h4>
      </div>
      <div class="row mt-2">
        <div class="col-12">
          <% @user.posts.each do |post| %>
            <div class="card shadow mb-3">
              <div class="row">
                <div class="col-7">
                  <%= link_to post_path(post) do %>
                    <%= image_tag post.get_image(250,150), class: "card-img" %>
                  <% end %>
                </div>
                <div class="card-body col-5">
                  <div class="row">
                    <div class="col-9">
                      <h5><%= post.spot %></h5>
                    </div>
                    <div class="col-3" id="bookmark_<%= post.id %>">
                      <%= render 'bookmarks/bookmark', post: post %>
                    </div>
                  </div>
                  <div class="row">
                    <% post.tags.each do |tag| %>
                      <div class="col-auto flex-wrap">
                        <span class="text-white bg-dark border border-dark rounded small px-1">
                          #<%= tag.name %>
                        </span>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  let map;
  let marker = [];
  let markerData = gon.posts;
  let user = gon.user

  function initMap() {
    geocoder = new google.maps.Geocoder()

    map = new google.maps.Map(document.getElementById('user_map'), {
      center: { lat: gon.user.latitude, lng: gon.user.longitude },
      zoom: 9,
      styles: [
        {
          featureType: 'all',
          elementType: 'labels',
          stylers: [
            {visibility: 'off'},
          ],
        },
        {
          featureType: 'all',
          elementType: 'all',
          stylers: [
            {visibility: 'inherit'},
          ],
        },
        {
          featureType: 'all',
          elementType: 'all',
          stylers: [
            {hue: '#0F222D'},
            {saturation : -70},
          ],
        }
      ]
    });

    for (var i = 0; i < markerData.length; i++) {
      let id = markerData[i]['id']

      markerLatLng = new google.maps.LatLng({
        lat: markerData[i]['latitude'],
        lng: markerData[i]['longitude']
      });

      marker[i] = new google.maps.Marker({
        position: markerLatLng,
        map: map
      });
    }
  }

  function codeAddress() {
    let inputAddress = document.getElementById('address').value;

    geocoder.geocode({
      'address': inputAddress
    }, function (results, status) {
      if(status == 'OK') {
        map.setCenter(results[0].geometry.location);
        var marker = new google.maps.Marker({
          map: map,
          position: results[0].geometry.location
        });

        notice.textContent = "検索結果：" + results[0]. geometry.location
      } else {
        alert('該当する結果がありませんでした：' + status);
      }
    });
  }

</script>

<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLE_MAP_KEY'] %>&callback=initMap" async defer></script>